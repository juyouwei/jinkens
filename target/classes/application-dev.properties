#------------------------------------------------服务器配置---------------------------------------
#服务端口
server.port=8090
#如果不用分布式服务总线，则需将management.port注释掉
#management.port=7002

#tomcat I/O线程数，默认8
server.tomcat.io-threads=8
#tomcat 工作线程数，默认64
server.tomcat.worker-threads=64
#tomcat 每块缓存的空间大小，单位为byte
server.tomcat.buffer-size=1024
#tomcat 每个区域缓存数块数
server.tomcat.buffers-per-region=1024
#tomcat 堆外内存
server.tomcat.direct-buffers=true

mybatis.mapper-locations=classpath:/mapper/*.xml
mybatis.type-aliases-package=com.sgcc.*.entity
mybatis.type-enums-package=com.sgcc.order.enums
#spring.rabbitmq.host=rabbitmq
#spring.rabbitmq.username=admin
#spring.rabbitmq.password=1234
#spring.rabbitmq.port=5672
#spring.rabbitmq.virtual-host=/
logging.level.com.sgcc.map=trace
logging.level.com.sgcc=DEBUG


#微服务名称（每个微服务名称必须唯一，请根据实际业务应用进行修改）
spring.application.name=break-point
#server.context-path=/osg-p0005

#------------------------------------------------加密工具密码配置----------------------------------
#加密工具密码
jasypt.encryptor.secretcode=nrmZtkF7T0kjG/VodDvBw93Ct8EgjCA+

#------------------------------------------------数据源配置osg-p0002----------------------------------------
#数据源驱动
#示例：
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
#数据源url地址：
#示例：MySQL:jdbc:mysql://[ip]:[port]/[database]?serverTimezone=GMT%2b8;Oracle:jdbc:oracle:thin:@[ip]:[port]:[orcl];postgreSQL:jdbc:postgresql://[ip]:[port]/[database]
#spring.datasource.url=jdbc:oracle:thin:@30.20.109.97:11521:webdb
#spring.datasource.url=jdbc:oracle:thin:@30.20.110.230:11521:webdb
#spring.datasource.url=jdbc:oracle:thin:@10.71.12.128:1521:orcl
#数据源用户名
#spring.datasource.username=osgpc
#数据源密码
#spring.datasource.password=osgpc
#------------------------------------------------数据源配置----------------------------------------
#数据源url地址：
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#示例：MySQL:jdbc:mysql://[ip]:[port]/[database]?serverTimezone=GMT%2b8;Oracle:jdbc:oracle:thin:@[ip]:[port]:[orcl];postgreSQL:jdbc:postgresql://[ip]:[port]/[database]
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=utf8&autoReconnect=true&useSSL=false&serverTimezone=Asia/Shanghai
#数据源用户名
spring.datasource.username=root
#数据源密码
spring.datasource.password=root
#连接池的最大值，同一时间可以从池分配的最多连接数量，0时无限制，默认设置20
spring.datasource.maxActive=10
#连接初始值，连接池启动时创建的连接数量的初始值，默认设置为1
spring.datasource.initialSize=1
#最大等待时间，单位为毫秒，默认60000毫秒
spring.datasource.maxWait=60000
#最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请
spring.datasource.minIdle=1
#指定空闲连接检查、废弃连接清理、空闲连接池大小调整之间的操作时间间隔，单位为毫秒 默认60s
spring.datasource.timeBeteenEvictionRunsMillis=60000
#指定一个空闲连接最少空闲多久后可被清除，单位为毫秒300000
spring.datasource.minEvictableIdelTimeMillis=300000
spring.datasource.keepAlive=true
#用于验证连接是否成功的查询SQL语句,SQL语句必须至少要返回一行数据
#spring.datasource.validationQuery=select 1
#当连接空闲时，是否执行连接测试，默认为true
#spring.datasource.testWhileIdle=true
#当从连接池借用连接时，是否测试该连接
#spring.datasource.testOnBorrow=false
#在连接归还到连接池时是否测试该连接
#spring.datasource.testOnReturn=false
#是否对已备语句进行池管理（布尔值），是否对PreparedStatement进行缓存
#spring.datasource.poolPreparedStatements=true
#指定最大的打开的prepared statements数量
#spring.datasource.maxOpenPreparedStatements=20
#配置数据库方言 mysql,oracle,postgreSQL不用配置方言，达梦金仓需要配置方言（达梦：org.hibernate.dialect.DmDialect;金仓：org.hibernate.dialect.KingbaseDialect）
#spring.jpa.properties.hibernate.dialect=
#设置是否在打印sql，默认为false
#spring.jpa.show-sql= true

#------------------------------------------------缓存配置-----------------------------------------
#redis配置
#单机模式
#redis数据库索引，默认为0
#spring.redis.database=0
#redis服务器地址
#spring.redis.host=127.0.0.1
#redis服务器连接端口号
#spring.redis.port=6379
#redis服务器连接密码，默认为空
#spring.redis.password=nrmZtkF7T0kjG/VodDvBw93Ct8EgjCA+
#redis连接池最大活跃连接数
#spring.redis.pool.max-active=8
#redis连接池最大阻塞等待时间
#spring.redis.pool.max.wait=-1
#redis连接池最大空闲连接数
#srping.redis.pool.max-idle=8
#redis连接池最小空闲连接数
#spring.redis.pool.min-idle=0
#redis连接池超时时间，单位为毫秒
#spring.redis.pool.timeout=60000

#主从复制模式--sentinel高可用集群模式
#高可用主服务器哨兵名称
#spring.redis.sentinel.master=
#高可用redis主节点服务器地址列表:[host1]:[port1],[host2]:[port2],....
#spring.redis.sentinel.nodes=

#redis3.x 集群模式
#集群中的节点配置:[host1]:[port1],[host2]:[port2],....
spring.redis.cluster.nodes=30.20.110.52:17000,30.20.110.52:17001,30.20.110.52:17002,30.20.110.53:17003,30.20.110.53:17004,30.20.110.53:17005
#spring.redis.cluster.nodes=10.71.12.24:7001,10.71.12.24:7002,10.71.12.24:7003,10.71.12.24:7004,10.71.12.24:7005,10.71.12.24:7006
#最大重定向，由于集群失败机制是多数失败则失败，那么集群的最低标准是3个分片，1主1从，总共六个节点，
#所以如果当前节点失败，最大的重定向为6-1=5，spring默认的也为5
spring.redis.cluster.max-redirects=5
#redis集群响应超时时间
spring.redis.cluster.timeout=60000
#redis集群密码
spring.redis.cluster.secretcode=passwd123
spring.kafka.zookeeper.connect=10.71.12.26:22181,10.71.12.27:22181,10.71.12.28:22181
spring.kafka.metadata.broker.list=10.71.12.26:19092,10.71.12.27:19092,10.71.12.28:19092

#------------------------------------------------日志配置-----------------------------------------
#日志配置文件（根据实际生产环境修改对应的目录和文件名）
#logging.config=classpath:log-sguap.xml
#日志输出路径
#logging.path=d:/logs

#设置日志级别，形如'logging.level.* = LEVEL'     logging.level：日志级别控制前缀，*为包名或Logger名   LEVEL：选项TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
#设置root日志的级别，一般为INFO （日志级别：TRACE < DEBUG < INFO < WARN < ERROR < FATAL），建议为INFO
logging.level.root=INFO
#设置org.hibernate包下所有类的日志级别，建议为INFO
logging.level.org.hibernate=INFO
#设置org.hibernate.type.descriptor.sql.BasicBinder类的日志级别，即设置输出sql绑定参数列表的日志级别，建议设置为TRACE
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#设置org.hibernate.type.descriptor.sql.BasicExtractory类的日志级别，即设置输出查询结果列表的日志级别，建议设置为TRACE
logging.level.org.hibernate.type.descriptor.sql.BasicExtractory=TRACE
#设置com.itmuch.youran.persistence包下所有类的日志级别，建议为ERROR
logging.level.com.itmuch.youran.persistence=ERROR
#------------------------------RocketMQ-----------------------
aliyun.access-key-id=73926af228604a6fa3cd7bc655605f79
aliyun.access-key-secret=e0mzwcqlSw/HNp7lWyj0l5XEEsw=
#mq.endpoint=http://mq.server.sgcloud.com:8080/rocketmq/nsaddr4broker-internal
mq.endpoint=127.0.0.1:9876
#mq.producer-id=PID-zfzx
#mq.consumer-id=CID-zfzx-normal-test
#message-queue.topics=zfzx-normal-test
message-queue.topics=mq_test
mq.consumer-id=CID_TEST
mq.producer-id=PID_TEST
mq.max-reconsume-times=1
spring.profiles.active=4
#-----------------------------------xxljob----------------------------
### xxl-job admin address list, such as "http://address" or "http://address01,http://address02"
xxl.job.admin.addresses=http://127.0.0.1:8080/xxl-job-admin/
### xxl-job executor address
xxl.job.executor.appname=xxl-job-executor-sample
xxl.job.executor.ip=
xxl.job.executor.port=9999

### xxl-job, access token
xxl.job.accessToken=

### xxl-job log path
xxl.job.executor.logpath=/data/applogs/xxl-job/jobhandler
### xxl-job log retention days
xxl.job.executor.logretentiondays=-1
log.dir=/logs/

